import * as React from "react";
// var LOADER_CONTAINER = $("#loader");
// var LOADER_INTERVAL = 1600;
var LOADERS = [
  ["üå∂", "Dicing peppers"],
  ["üî™", "Sharpening knives"],
  ["üë©üèΩ‚Äçüç≥", "Starching aprons"],
  ["ü•í", "Saut√©ing veggies"],
  ["üç≥", "Frying eggs"],
  ["üßÄ", "Cutting cheese"],
  ["ü•ì", "Crisping bacon"],
  ["üåΩ", "Shucking corn"],
  ["üçö", "Steaming rice"],
  ["üçû", "Baking bread"],
  ["üç∑", "Uncorking wine"],
  ["üçΩ", "Plating dishes"],
  ["üç§", "Frying shrimp"],
  ["ü•ê", "Toasting croissants"],
  ["üçã", "Deseeding lemons"],
  ["ü•ï", "Peeling carrots"],
  ["üç≤", "Stirring soups"],
  ["üê∏üçµ", "Spilling tea"],
  ["üçï", "Firing pizzas"],
  ["üî•", "Lighting burners"],
  ["ü•î", "Roasting potatoes"],
  ["ü§î", "Testing tastes"],
  ["üçä", "Squeezing oranges"],
  ["üíß", "Pouring water"],
  ["üç¶", "Freezing ice cream"],
  ["üç®", "Scooping desserts"],
  ["ü•ó", "Mixing salads"],
  ["ü•ö", "Cracking eggs"],
  ["ü•û", "Stacking pancakes"],
  ["üçí", "Putting a cherry on top"],
  ["üçó", "Seasoning wings"],
  ["üçÖ", "Crushing tomatoes"],
  ["üçç", "Chunking pineapples"],
  ["üíñ", "Adding a pinch of something perfect"],
  ["üìù", "Writing recipes"],
  ["üóì", "Planning menus"],
  ["üå∞", "Cracking nuts"],
  ["üçø", "Popping popcorn"],
  ["üçæ", "Popping champers"],
  ["üçÜ", "Planting eggs"],
  ["ü•ë", "Mashing avocados"],
  ["üçå", "Peeling bananas"],
  ["üçî", "Flipping burgers"],
  ["üçª", "Clinking glasses"],
  ["üç¥", "Polishing silverware"],
  ["üç™", "Baking cookies"],
  ["üç£", "Rolling sushi"],
  ["üç∂", "Warming sake"],
  ["üç±", "Boxing bento"],
  ["üåØ", "Wrapping burritos"],
  ["‚òïÔ∏è", "Brewing coffee"],
  ["üçè", "Coring apples"],
  ["üåø", "Growing herbs"],
  ["üç∞", "Slicing cakes"],
  ["üçü", "Frying fries"],
  ["üçë", "Peeling peaches"],
  ["üçõ", "Spicing curry"],
  ["üåÆ", "Assembling tacos"],
  ["üì∏", "Photographing plates"],
  ["üõé", "Dinging bells"],
  ["üç´", "Melting chocolate"],
  ["üçú", "Cooking ramen"],
  ["ü•ñ", "Baking baguettes"],
  ["‚ùÑÔ∏è", "Shaving ice"],
  ["ü•õ", "Blending milkshakes"],
  ["üçÑ", "Chopping mushrooms"],
  ["üêü", "Searing fish"],
  ["üòã", "Licking lips"],
  ["ü§ûüèæ", "Crossing fingers"],
  ["üëäüèø", "Bumping fists"],
  ["‚òùüèΩ", "Throwing in one last thing"],
  ["üòôüëå", "Doing that Italian chef thing"],
  ["üëÉüèª", "Smellin‚Äô smells"],
  ["üçπ", "Mixing drinks"],
  ["‚ú®", "Making magic"],
  ["üå±", "Planting seeds"],
  ["‚öóÔ∏è", "Testing something new"],
];

export default function Loader() {
  const load1 = () => new Promise((resolve) => setTimeout(resolve, 1300)); // 2 seconds
  const load2 = () => new Promise((resolve) => setTimeout(resolve, 2600)); // 2 seconds
  const load3 = () => new Promise((resolve) => setTimeout(resolve, 3900)); // 2 seconds

  const [showNext, setShowNext] = React.useState<boolean>(false);
  const [showLast, setShowLast] = React.useState<boolean>(false);
  const [showNone, setShowNone] = React.useState<boolean>(false);
  React.useEffect(() => {
    load1().then(() => {
      setShowNext(true);
      console.log(showNext);
    });
  }, []);
  React.useEffect(() => {
    load2().then(() => {
      // setShowNext(false);
      setShowLast(true);
    });
  }, []);
  React.useEffect(() => {
    load3().then(() => {
      // setShowNext(false);
      setShowNone(true);
    });
  }, []);
  return (
    <div className="loader">
      <div
        className={`emoji  ${
          showNext || showLast ? "animateOut hidden delay-300" : "block"
        }`}
      >
        üçπ
      </div>
      <div
        className={`text  ${
          showNext || showLast ? "animateOut hidden delay-300" : "block"
        }`}
      >
        Mixing drink
      </div>
      <div
        className={`emoji ${
          showNext ? "visible delay-300" : "hidden delay-0"
        } ${showLast ? "animateOut hidden delay-300" : ""}`}
      >
        üç±
      </div>
      <div
        className={`text ${showNext ? "visible delay-300" : "hidden delay-0"} ${
          showLast ? "animateOut hidden delay-300" : ""
        }`}
      >
        Boxing bento
      </div>
      <div
        className={`emoji ${
          showLast ? "visible delay-300" : "hidden delay-0"
        } ${showNone ? "animateOut hidden delay-300" : ""}`}
      >
        ‚ú®
      </div>
      <div
        className={`text ${showLast ? "visible delay-300" : "hidden delay-0"} ${
          showNone ? "animateOut hidden delay-300" : ""
        }`}
      >
        Making magic
      </div>
    </div>
  );
}

// $(document).ready(function () {
//   var cycleLoader = function () {
//     var index = Math.floor(Math.random() * LOADERS.length);
//     var selected = LOADERS[index];
//     var selectedEmoji = selected[0];
//     var selectedText = selected[1];

//     // First transition out the old loader
//     setTimeout(function () {
//       LOADER_CONTAINER.children().addClass("animateOut hidden delay-300");
//     }, LOADER_INTERVAL - 300); // This negative value should be the same as $animation-duration in the CSS

//     // Then remove the animated out divs
//     LOADER_CONTAINER.children(".emoji").last().remove();
//     LOADER_CONTAINER.children(".text").last().remove();

//     // Then animate in the new one
//     LOADER_CONTAINER.append('<div class="emoji">' + selectedEmoji + "</div>");
//     LOADER_CONTAINER.append('<div class="text">' + selectedText + "</div>");
//   };

//   setInterval(cycleLoader, LOADER_INTERVAL);
//   cycleLoader(); // Run first time without delay
// });
